{"version":3,"sources":["components/todosFilter/TodosFilter.js","components/todoItem/TodoItem.js","components/todoList/TodoList.js","components/todoApp/TodoApp.js","App.js","index.js"],"names":["TodoFilter","_ref","todos","initTodos","allTodosClick","indexTab","completedClick","clearCompleted","activeClick","react_default","a","createElement","className","length","filter","todo","completed","href","onClick","type","TodoItem","state","isEdit","editedTodo","_this","props","todoTitle","handleDoubleClick","setState","onEditChange","target","value","handleEditSubmit","_this$props","id","handleEdit","deleteClick","_this2","this","_this$props2","status","handleStatusClick","liClassName","cx","editing","onSubmit","onChange","checked","onDoubleClick","React","Component","TodoList","map","_ref2","title","todoItem_TodoItem","TodoApp","error","handleInputChange","handleSubmit","event","preventDefault","addTodo","newTodo","prevState","_objectSpread","name","placeholder","App","App_objectSpread","concat","Object","toConsumableArray","findTodo","item","allCompleted","completeAll","arr","every","JSON","parse","localStorage","getItem","_this$state","setItem","stringify","_this$state2","components_todoApp_TodoApp","htmlFor","todoList_TodoList","TodosFilter","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.b6ad53e2.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TodoFilter = ({\n  todos,\n  initTodos,\n  allTodosClick,\n  indexTab,\n  completedClick,\n  clearCompleted,\n  activeClick,\n}) => (\n  <footer className=\"footer\">\n    <span className=\"todo-count\">\n      { initTodos.length && initTodos.filter(todo => !todo.completed).length }\n      { ' items left' }\n    </span>\n\n    <ul className=\"filters\">\n      <li>\n        <a\n          href=\"#/\"\n          className={!indexTab ? 'selected' : ''}\n          onClick={allTodosClick}\n        >\n          All\n        </a>\n      </li>\n      <li>\n        <a\n          href=\"#/\"\n          className={indexTab === 'active' ? 'selected' : ''}\n          onClick={activeClick}\n        >\n          Active\n        </a>\n      </li>\n      <li>\n        <a\n          href=\"#/completed\"\n          className={indexTab === 'completed' ? 'selected' : ''}\n          onClick={completedClick}\n        >\n          Completed\n        </a>\n      </li>\n    </ul>\n\n    {todos.filter(todo => todo.completed).length > 0 && (\n      <button\n        type=\"button\"\n        className=\"clear-completed\"\n        onClick={clearCompleted}\n      >\n        Clear completed\n      </button>\n    )}\n  </footer>\n);\n\nTodoFilter.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n    completed: PropTypes.bool.isRequired,\n  })).isRequired,\n  initTodos: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n    completed: PropTypes.bool.isRequired,\n  })).isRequired,\n  indexTab: PropTypes.string.isRequired,\n  activeClick: PropTypes.func.isRequired,\n  completedClick: PropTypes.func.isRequired,\n  clearCompleted: PropTypes.func.isRequired,\n  allTodosClick: PropTypes.func.isRequired,\n};\n\nexport default TodoFilter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\n\nclass TodoItem extends React.Component {\n  state = {\n    isEdit: false,\n    editedTodo: this.props.todoTitle,\n  };\n\n  handleDoubleClick = () => {\n    this.setState({\n      isEdit: true,\n    });\n  };\n\n  onEditChange = ({ target }) => {\n    this.setState({\n      editedTodo: target.value,\n    });\n  };\n\n  handleEditSubmit = () => {\n    const {\n      id,\n      handleEdit,\n      deleteClick,\n    } = this.props;\n    const { editedTodo } = this.state;\n\n    this.setState({\n      isEdit: false,\n    });\n    if (editedTodo !== '') {\n      handleEdit(editedTodo, id);\n    } else {\n      deleteClick(id);\n    }\n  };\n\n  render() {\n    const {\n      todoTitle,\n      status,\n      id,\n      handleStatusClick,\n      deleteClick,\n    } = this.props;\n    const { editedTodo } = this.state;\n    const liClassName = cx({\n      editing: this.state.isEdit,\n      completed: status,\n    });\n\n    return (\n      <li className={liClassName}>\n        {!this.state.isEdit\n          ? (\n            <form className=\"view\">\n              <input\n                type=\"checkbox\"\n                id={id}\n                className=\"toggle\"\n                checked={status}\n                onChange={() => handleStatusClick(id)}\n              />\n              <p\n                className=\"label\"\n                onDoubleClick={this.handleDoubleClick}\n              >\n                {todoTitle}\n              </p>\n              <button\n                type=\"button\"\n                className=\"destroy\"\n                onClick={() => deleteClick(id)}\n              />\n            </form>\n          ) : (\n            <form onSubmit={this.handleEditSubmit}>\n              <input\n                type=\"text\"\n                className=\"edit\"\n                value={editedTodo}\n                onChange={value => this.onEditChange(value)}\n              />\n            </form>\n          )\n        }\n      </li>\n    );\n  }\n}\n\nTodoItem.propTypes = {\n  todoTitle: PropTypes.string.isRequired,\n  status: PropTypes.bool.isRequired,\n  id: PropTypes.string.isRequired,\n  handleStatusClick: PropTypes.func.isRequired,\n  deleteClick: PropTypes.func.isRequired,\n  handleEdit: PropTypes.func.isRequired,\n};\n\nexport default TodoItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TodoItem from '../todoItem/TodoItem';\n\nconst TodoList = ({\n  todos,\n  handleStatusClick,\n  deleteClick,\n  handleEdit,\n}) => (\n  <ul className=\"todo-list\">\n    {todos.map(({ title, completed, id }) => (\n      <TodoItem\n        todoTitle={title}\n        todos={todos}\n        id={id}\n        handleStatusClick={handleStatusClick}\n        status={completed}\n        handleEdit={handleEdit}\n        deleteClick={deleteClick}\n      />\n    ))}\n  </ul>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string,\n    completed: PropTypes.bool,\n    id: PropTypes.string,\n  })).isRequired,\n  handleStatusClick: PropTypes.func.isRequired,\n  deleteClick: PropTypes.func.isRequired,\n  handleEdit: PropTypes.func.isRequired,\n};\n\nexport default TodoList;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './TodoApp.css';\n\nclass TodoApp extends Component {\n  state = {\n    title: '',\n    id: 1,\n    error: null,\n  };\n\n  handleInputChange = ({ target }) => {\n    this.setState({\n      title: target.value,\n      error: null,\n    });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    const { addTodo } = this.props;\n    const { newTodo } = event.target;\n\n    if (!newTodo.value) {\n      this.setState({\n        error: 'Enter todo',\n      });\n    } else {\n      const todo = {\n        title: newTodo.value,\n        id: this.state.id,\n        completed: false,\n      };\n\n      this.setState(prevState => ({\n        ...prevState,\n        title: '',\n        id: prevState.id + 1,\n      }));\n      addTodo(todo);\n    }\n  };\n\n  render() {\n    const { error } = this.state;\n\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <input\n          name=\"newTodo\"\n          id=\"newTodo\"\n          placeholder=\"What you need to do?\"\n          className=\"new-todo\"\n          value={this.state.title}\n          onChange={this.handleInputChange}\n        />\n        {error && (\n          <p>{error}</p>\n        )}\n        <input type=\"submit\" className=\"submit\" />\n      </form>\n    );\n  }\n}\n\nTodoApp.propTypes = {\n  addTodo: PropTypes.func.isRequired,\n};\n\nexport default TodoApp;\n","import React from 'react';\nimport TodoFilter from './components/todosFilter/TodosFilter';\nimport TodoList from './components/todoList/TodoList';\nimport TodoApp from './components/todoApp/TodoApp';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    initTodos: [],\n    indexTab: '',\n  };\n\n  componentDidMount() {\n    this.setState({\n      todos: JSON.parse(localStorage.getItem('todoLost')) || [],\n      initTodos: JSON.parse(localStorage.getItem('initTodoList')) || [],\n    });\n\n    this.allTodosClick(this.state.indexTab);\n  }\n\n  componentDidUpdate(prevState) {\n    const { todos, initTodos } = this.state;\n\n    if (todos !== prevState.todos) {\n      localStorage.setItem('initTodoList', JSON.stringify(initTodos));\n      localStorage.setItem('todoList', JSON.stringify(todos));\n    }\n  }\n\n  addTodo = (todo) => {\n    this.setState(prevState => ({\n      ...prevState,\n      todos: [...prevState.todos, todo],\n      initTodos: [...prevState.initTodos, todo],\n    }));\n  };\n\n  activeClick = () => {\n    this.setState(prevState => ({\n      todos: prevState.initTodos.filter(todo => !todo.completed),\n      indexTab: 'active',\n    }));\n\n    this.handleStatusClick(this.state.indexTab);\n  };\n\n  completedClick = () => {\n    this.setState(prevState => ({\n      todos: prevState.initTodos.filter(todo => todo.completed),\n      indexTab: 'completed',\n    }));\n  };\n\n  allTodosClick = () => {\n    this.setState(prevState => ({\n      todos: [...prevState.initTodos],\n      indexTab: false,\n    }));\n  };\n\n  handleStatusClick = (id) => {\n    this.setState(prevState => ({\n      todos: prevState.todos.map(todo => (todo.id === id\n        ? { ...todo, completed: !todo.completed }\n        : todo)),\n      initTodos: prevState.initTodos.map(todo => (todo.id === id\n        ? { ...todo, completed: !todo.completed }\n        : todo)),\n    }));\n    if (this.state.indexTab === 'active') {\n      this.activeClick();\n    }\n\n    if (this.state.indexTab === 'completed') {\n      this.completedClick();\n    }\n  };\n\n  handleEdit = (todo, id) => {\n    const findTodo = item => (\n      item.id === id\n        ? { ...item, title: todo }\n        : item\n    );\n\n    this.setState(prevState => ({\n      todos: prevState.todos.map(findTodo),\n      initTodos: prevState.initTodos.map(findTodo),\n    }));\n  }\n\n  deleteClick = (id) => {\n    this.setState(prevState => ({\n      todos: prevState.todos.filter(item => item.id !== id),\n      initTodos: prevState.initTodos.filter(item => item.id !== id),\n    }));\n  };\n\n  clearCompleted = () => {\n    this.setState(prevState => ({\n      todos: prevState.todos.filter(todo => !todo.completed),\n      initTodos: prevState.initTodos.filter(todo => !todo.completed),\n    }));\n  };\n\n  allCompleted = () => {\n    const completeAll = arr => (\n      arr.map(todo => ({\n        ...todo,\n        completed: !arr.every(({ completed }) => completed),\n      }))\n    );\n\n    this.setState(prevState => ({\n      todos: completeAll(prevState.todos),\n      initTodos: completeAll(prevState.initTodos),\n    }));\n  };\n\n  render() {\n    const { todos, initTodos, indexTab } = this.state;\n\n    return (\n      <section className=\"todoapp\">\n        <header className=\"header\">\n          <h1>Todos</h1>\n          <TodoApp addTodo={this.addTodo} />\n        </header>\n        <section className=\"main\">\n          <input\n            type=\"checkbox\"\n            id=\"toggle-all\"\n            className=\"toggle-all\"\n            onClick={this.allCompleted}\n          />\n          <label htmlFor=\"toggle-all\">Mark all as complete</label>\n\n          <TodoList\n            todos={todos}\n            handleStatusClick={this.handleStatusClick}\n            deleteClick={this.deleteClick}\n            handleEdit={this.handleEdit}\n          />\n        </section>\n        <TodoFilter\n          todos={todos}\n          initTodos={initTodos}\n          handleStatusClick={this.handleStatusClick}\n          allTodosClick={this.allTodosClick}\n          indexTab={indexTab}\n          clearCompleted={this.clearCompleted}\n          completedClick={this.completedClick}\n          activeClick={this.activeClick}\n        />\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}