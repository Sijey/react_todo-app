{"version":3,"sources":["components/todosFilter/TodosFilter.js","components/todoItem/TodoItem.js","components/todoList/TodoList.js","components/todoApp/TodoApp.js","App.js","index.js"],"names":["TodoFilter","_ref","todos","originTodos","allTodosClick","indexTab","activeClick","completedClick","clearCompleted","react_default","a","createElement","className","length","filter","todo","completed","href","onClick","type","TodoItem","state","isEdit","editedTodo","_this","props","todoTitle","handleDoubleClick","setState","onEditChange","target","value","handleEditSubmit","_this$props","id","handleEdit","deleteTodo","_this2","this","_this$props2","status","handleStatusClick","liClassName","cx","editing","onSubmit","onChange","checked","onDoubleClick","React","Component","TodoList","map","_ref2","title","todoItem_TodoItem","key","uuidv1","require","TodoApp","error","handleInputChange","handleSubmit","event","preventDefault","addTodo","newTodo","prevState","_objectSpread","name","placeholder","App","App_objectSpread","concat","Object","toConsumableArray","statusTodo","findTodo","item","allCompleted","completeAll","markAll","every","JSON","parse","localStorage","getItem","_this$state","setItem","stringify","_this$state2","components_todoApp_TodoApp","htmlFor","todoList_TodoList","TodosFilter","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.2f8cf8a9.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TodoFilter = ({\n  todos,\n  originTodos,\n  allTodosClick,\n  indexTab,\n  activeClick,\n  completedClick,\n  clearCompleted,\n}) => (\n  <footer className=\"footer\">\n    <span className=\"todo-count\">\n      { originTodos.length && originTodos.filter(todo => !todo.completed).length }\n      { ' items left' }\n    </span>\n\n    <ul className=\"filters\">\n      <li>\n        <a\n          href=\"#/\"\n          className={indexTab === 'all' ? 'selected' : ''}\n          onClick={allTodosClick}\n        >\n          All\n        </a>\n      </li>\n      <li>\n        <a\n          href=\"#/active\"\n          onClick={activeClick}\n          className={indexTab === 'active' ? 'selected' : ''}\n        >\n          Active\n        </a>\n      </li>\n      <li>\n        <a\n          href=\"#/completed\"\n          onClick={completedClick}\n          className={indexTab === 'completed' ? 'selected' : ''}\n        >\n          Completed\n        </a>\n      </li>\n    </ul>\n\n    {todos.filter(todo => todo.completed).length > 0 && (\n      <button\n        type=\"button\"\n        className=\"clear-completed\"\n        onClick={clearCompleted}\n      >\n        Clear completed\n      </button>\n    )}\n  </footer>\n);\n\nTodoFilter.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n    completed: PropTypes.bool.isRequired,\n  })).isRequired,\n  originTodos: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n    completed: PropTypes.bool.isRequired,\n  })).isRequired,\n  indexTab: PropTypes.string.isRequired,\n  activeClick: PropTypes.func.isRequired,\n  completedClick: PropTypes.func.isRequired,\n  clearCompleted: PropTypes.func.isRequired,\n  allTodosClick: PropTypes.func.isRequired,\n};\n\nexport default TodoFilter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\n\nclass TodoItem extends React.Component {\n  state = {\n    isEdit: false,\n    editedTodo: this.props.todoTitle,\n  };\n\n  handleDoubleClick = () => {\n    this.setState({\n      isEdit: true,\n    });\n  };\n\n  onEditChange = ({ target }) => {\n    this.setState({\n      editedTodo: target.value,\n    });\n  };\n\n  handleEditSubmit = () => {\n    const {\n      id,\n      handleEdit,\n      deleteTodo,\n    } = this.props;\n    const { editedTodo } = this.state;\n\n    this.setState({\n      isEdit: false,\n    });\n    if (editedTodo !== '') {\n      handleEdit(editedTodo, id);\n    } else {\n      deleteTodo(id);\n    }\n  };\n\n  render() {\n    const {\n      todoTitle,\n      status,\n      id,\n      handleStatusClick,\n      deleteTodo,\n    } = this.props;\n    const { editedTodo } = this.state;\n    const liClassName = cx({\n      editing: this.state.isEdit,\n      completed: status,\n    });\n\n    return (\n      <li className={liClassName}>\n        {!this.state.isEdit\n          ? (\n            <form className=\"view\">\n              <input\n                type=\"checkbox\"\n                id={id}\n                className=\"toggle\"\n                checked={status}\n                onChange={() => handleStatusClick(id)}\n              />\n              <p\n                className=\"label\"\n                onDoubleClick={this.handleDoubleClick}\n              >\n                {todoTitle}\n              </p>\n              <button\n                type=\"button\"\n                className=\"destroy\"\n                onClick={() => deleteTodo(id)}\n              />\n            </form>\n          ) : (\n            <form onSubmit={this.handleEditSubmit}>\n              <input\n                type=\"text\"\n                className=\"edit\"\n                value={editedTodo}\n                onChange={value => this.onEditChange(value)}\n              />\n            </form>\n          )\n        }\n      </li>\n    );\n  }\n}\n\nTodoItem.propTypes = {\n  todoTitle: PropTypes.string.isRequired,\n  status: PropTypes.bool.isRequired,\n  id: PropTypes.string.isRequired,\n  handleStatusClick: PropTypes.func.isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n  handleEdit: PropTypes.func.isRequired,\n};\n\nexport default TodoItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TodoItem from '../todoItem/TodoItem';\n\nconst TodoList = ({\n  todos,\n  handleStatusClick,\n  deleteTodo,\n  handleEdit,\n}) => (\n  <ul className=\"todo-list\">\n    {todos.map(({ title, completed, id }) => (\n      <TodoItem\n        todoTitle={title}\n        todos={todos}\n        id={id}\n        key={id}\n        handleStatusClick={handleStatusClick}\n        status={completed}\n        handleEdit={handleEdit}\n        deleteTodo={deleteTodo}\n      />\n    ))}\n  </ul>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string,\n    completed: PropTypes.bool,\n    id: PropTypes.string,\n  })).isRequired,\n  handleStatusClick: PropTypes.func.isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n  handleEdit: PropTypes.func.isRequired,\n};\n\nexport default TodoList;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './TodoApp.css';\n\nconst uuidv1 = require('uuid/v1');\n\nclass TodoApp extends Component {\n  state = {\n    title: '',\n    error: null,\n  };\n\n  handleInputChange = ({ target }) => {\n    this.setState({\n      title: target.value,\n      error: null,\n    });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    const { addTodo } = this.props;\n    const { newTodo } = event.target;\n\n    if (!newTodo.value) {\n      this.setState({\n        error: 'Enter todo',\n      });\n    } else {\n      const todo = {\n        title: newTodo.value,\n        id: uuidv1(),\n        completed: false,\n      };\n\n      this.setState(prevState => ({\n        ...prevState,\n        title: '',\n      }));\n      addTodo(todo);\n    }\n  };\n\n  render() {\n    const { error } = this.state;\n\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <input\n          name=\"newTodo\"\n          id=\"newTodo\"\n          placeholder=\"What you need to do?\"\n          className=\"new-todo\"\n          value={this.state.title}\n          onChange={this.handleInputChange}\n        />\n        {error && (\n          <p>{error}</p>\n        )}\n        <input type=\"submit\" className=\"submit\" />\n      </form>\n    );\n  }\n}\n\nTodoApp.propTypes = {\n  addTodo: PropTypes.func.isRequired,\n};\n\nexport default TodoApp;\n","import React from 'react';\nimport TodoFilter from './components/todosFilter/TodosFilter';\nimport TodoList from './components/todoList/TodoList';\nimport TodoApp from './components/todoApp/TodoApp';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    originTodos: [],\n    indexTab: 'all',\n  };\n\n  componentDidMount() {\n    this.setState({\n      todos: JSON.parse(localStorage.getItem('todoLost')) || [],\n      originTodos: JSON.parse(localStorage.getItem('originTodoList')) || [],\n    });\n\n    this.allTodosClick(this.state.indexTab);\n  }\n\n  componentDidUpdate(prevState) {\n    const { todos, originTodos } = this.state;\n\n    if (todos !== prevState.todos) {\n      localStorage.setItem('originTodoList', JSON.stringify(originTodos));\n      localStorage.setItem('todoList', JSON.stringify(todos));\n    }\n  }\n\n  addTodo = (todo) => {\n    this.setState(prevState => ({\n      ...prevState,\n      todos: [...prevState.todos, todo],\n      originTodos: [...prevState.originTodos, todo],\n    }));\n  };\n\n  activeClick = () => {\n    this.setState(prevState => ({\n      todos: prevState.originTodos.filter(todo => !todo.completed),\n      indexTab: 'active',\n    }));\n  };\n\n  completedClick = () => {\n    this.setState(prevState => ({\n      todos: prevState.originTodos.filter(todo => todo.completed),\n      indexTab: 'completed',\n    }));\n  };\n\n  allTodosClick = () => {\n    this.setState(prevState => ({\n      todos: [...prevState.originTodos],\n      indexTab: 'all',\n    }));\n  };\n\n  handleStatusClick = (id) => {\n    const statusTodo = todo => (\n      todo.id === id ? { ...todo, completed: !todo.completed } : todo\n    );\n\n    this.setState(prevState => ({\n      todos: prevState.todos.map(statusTodo),\n      originTodos: prevState.originTodos.map(statusTodo),\n    }));\n\n    if (this.state.indexTab === 'active') {\n      this.activeClick();\n    }\n\n    if (this.state.indexTab === 'completed') {\n      this.completedClick();\n    }\n  };\n\n  handleEdit = (todo, id) => {\n    const findTodo = item => (\n      item.id === id\n        ? { ...item, title: todo }\n        : item\n    );\n\n    this.setState(prevState => ({\n      todos: prevState.todos.map(findTodo),\n      originTodos: prevState.originTodos.map(findTodo),\n    }));\n  };\n\n  deleteTodo = (id) => {\n    this.setState(prevState => ({\n      todos: prevState.todos.filter(item => item.id !== id),\n      originTodos: prevState.originTodos.filter(item => item.id !== id),\n    }));\n  };\n\n  clearCompleted = () => {\n    this.setState(prevState => ({\n      todos: prevState.todos.filter(todo => !todo.completed),\n      originTodos: prevState.originTodos.filter(todo => !todo.completed),\n    }));\n  };\n\n  allCompleted = () => {\n    const completeAll = markAll => (\n      markAll.map(todo => ({\n        ...todo,\n        completed: !markAll.every(({ completed }) => completed),\n      }))\n    );\n\n    this.setState(prevState => ({\n      todos: completeAll(prevState.todos),\n      originTodos: completeAll(prevState.originTodos),\n    }));\n  };\n\n  render() {\n    const { todos, originTodos, indexTab } = this.state;\n\n    return (\n      <section className=\"todoapp\">\n        <header className=\"header\">\n          <h1>Todos</h1>\n          <TodoApp addTodo={this.addTodo} />\n        </header>\n        <section className=\"main\">\n          <input\n            type=\"checkbox\"\n            id=\"toggle-all\"\n            className=\"toggle-all\"\n            onClick={this.allCompleted}\n          />\n          <label htmlFor=\"toggle-all\">\n            <input\n              type=\"checkbox\"\n              className=\"toggle-all\"\n              onClick={this.allCompleted}\n            />\n            Mark all as complete\n          </label>\n\n          <TodoList\n            todos={todos}\n            handleStatusClick={this.handleStatusClick}\n            deleteTodo={this.deleteTodo}\n            handleEdit={this.handleEdit}\n          />\n        </section>\n        <TodoFilter\n          todos={todos}\n          originTodos={originTodos}\n          handleStatusClick={this.handleStatusClick}\n          allTodosClick={this.allTodosClick}\n          indexTab={indexTab}\n          clearCompleted={this.clearCompleted}\n          completedClick={this.completedClick}\n          activeClick={this.activeClick}\n        />\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}